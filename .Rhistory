#Code to change names for facets
facet_names <- c(
`CPRS_15` = "CPRS -15 Aust Emissions Price",
`CPRS_5` = "CPRS -5 Aust Emissions Price",
`Garnaut_25` = "Garnaut -25 Aust Emissions Price",
`Garnaut_10` = "Garnaut -10 Aust Emissions Price",
`SGLP_core` = "Strong Growth, Low Pollution Core",
`Clean_Energy_Future` = "Strong Growth, Low Pollution Clean Energy Future",
`Government_policy` = "Strong Growth, Low Pollution Government Policy",
`High_price_scenario` = "Strong Growth, Low Pollution High Price"
)
#Code to put faceted charts and ribbon on a single page.
multiplot(Govmod, allfacet, allribbon,cols=1)
auspriceline <-qplot(year, priceAUD2016, data=auspriceall, geom = "line", color = source) +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'e')) +
scale_x_continuous(breaks = seq(2010, 2050, by = 5)) +
scale_y_continuous(breaks = seq(0,800, by = 50), sec.axis = dup_axis()) +
theme_bw () +
theme(legend.title=element_blank()) +
theme(legend.position="bottom") +
theme(legend.text = element_text(size=7)) +
theme(axis.text = element_text(size=7)) +
theme(panel.grid.major.x = element_blank(), panel.grid.major.y =  element_blank()) +
theme(panel.grid.minor.x = element_blank(), panel.grid.minor.y =  element_blank()) +
theme(legend.title=element_blank()) +
theme(legend.position="bottom")
auspriceline
View(sumdatallausfin)
ggplot(wbpriceorder, aes(x=name, y=price2017)) +
geom_point(col=instrument, size=3) +   # Draw points
geom_segment(aes(x=name,
xend=name,
y=min(price2017),
yend=max(price2017)),
linetype="dashed",
size=0.1) +   # Draw dashed lines
labs(title="Prices in implemented carbon pricing initiatives (World Bank data)",
caption="Note: Nominal prices on April, 01 2017
Prices are not necessarily comparable between carbon pricing initiatives because of differences
in the number of sectors covered and allocation methods applied, specific exemptions, and different
compensation methods.", y = bquote('2017 USD/t'~CO[2]~'e'), x = "Price Initiative") +
scale_y_continuous(breaks = seq(0,150, by = 10)) +
coord_flip()
ggplot(wbpriceorder, aes(x=name, y=price2017, color = instrument)) +
geom_point(size=3) +   # Draw points
geom_segment(aes(x=name,
xend=name,
y=min(price2017),
yend=max(price2017)),
linetype="dashed",
size=0.1) +   # Draw dashed lines
labs(title="Prices in implemented carbon pricing initiatives (World Bank data)",
caption="Note: Nominal prices on April, 01 2017
Prices are not necessarily comparable between carbon pricing initiatives because of differences
in the number of sectors covered and allocation methods applied, specific exemptions, and different
compensation methods.", y = bquote('2017 USD/t'~CO[2]~'e'), x = "Price Initiative") +
scale_y_continuous(breaks = seq(0,150, by = 10)) +
coord_flip()
qplot(year, priceAUD2016, data=intprice, geom = "line", color = source) +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'e or t'~CO[2])) +
scale_x_continuous(breaks = seq(2020, 2050, by = 5)) +
scale_y_continuous(breaks = seq(0,800, by = 50)) +
theme(legend.title=element_blank()) +
theme(legend.position="bottom") +
theme(legend.text = element_text(size=7)) +
theme(axis.text = element_text(size=7))
multiplot(Govmod, allfacet, allribbon,cols=1)
multiplot(Govmod, allfacet, allribbon,cols=1)
qplot(year, priceAUD2016, data=auspriceall, geom = "line", color = source) +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'e')) +
scale_x_continuous(breaks = seq(2010, 2050, by = 5)) +
scale_y_continuous(breaks = seq(0,800, by = 50), sec.axis = dup_axis()) +
theme_bw () +
theme(legend.title=element_blank()) +
theme(legend.position="bottom") +
theme(legend.text = element_text(size=7)) +
theme(axis.text = element_text(size=7)) +
theme(panel.grid.major.x = element_blank(), panel.grid.major.y =  element_blank()) +
theme(panel.grid.minor.x = element_blank(), panel.grid.minor.y =  element_blank()) +
theme(legend.title=element_blank()) +
theme(legend.position="bottom")
multiplot(AR5a, AR5facet, AR5rib, cols=1)
View(sumdatall)
View(LPF_ausprice)
View(sumdatallausfin)
ggplot(wbpriceorder, aes(x=name, y=price2017, color = instrument)) +
geom_point(size=3) +   # Draw points
geom_segment(aes(x=name,
xend=name,
y=min(price2017),
yend=max(price2017)),
linetype="dashed",
size=0.1) +   # Draw dashed lines
labs(title="Prices in implemented carbon pricing initiatives (World Bank data)",
caption="`Note: Nominal prices on April, 01 2017
Prices are not necessarily comparable between carbon pricing initiatives because of differences
in the number of sectors covered and allocation methods applied, specific exemptions, and different
compensation methods.'", y = bquote('2017 USD/t'~CO[2]~'e'), x = "Price Initiative") +
scale_y_continuous(breaks = seq(0,150, by = 10)) +
coord_flip()
library(readr)
fin_AR5_subset <- read_delim("~/Documents/GitHub/R-Test-2/fin_AR5_subset.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(fin_AR5_subset)
library(readxl)
DELWP_Carbon_Pricing_Data <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "CPLF_ppp")
View(DELWP_Carbon_Pricing_Data)
rm(DELWP_Carbon_Pricing_Data)
library(readxl)
fin_CPLF_ppp <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "CPLF_ppp")
View(fin_CPLF_ppp)
library(readxl)
fin_CPLF_market <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "CPLF_market")
View(fin_CPLF_market)
library(readxl)
fin_quinet_PPP <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "quinet_PPP")
View(fin_quinet_PPP)
library(readxl)
fin_quinet_market <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "quinet_market")
View(fin_quinet_market)
library(readxl)
fin_corridors_ppp <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "corridors_ppp")
View(fin_corridors_ppp)
library(readxl)
fin_corridors_market <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "corridors_market")
View(fin_corridors_market)
rm(fin_corridors_ppp)
rm(fin_corridors_market)
library(readxl)
fin_corridors_ppp <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "corridors_ppp")
View(fin_corridors_ppp)
library(readxl)
fin_corridors_market <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "corridors_market")
View(fin_corridors_market)
library(readxl)
fin_IEA_2016_ppp <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "IEA 2016R")
View(fin_IEA_2016_ppp)
library(readxl)
fin_IEA_2016_Market <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "IEA_2016_Market")
View(fin_IEA_2016_Market)
library(readxl)
fin_IEA_IRENA_2017_PPP <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "IEA-IRENA_2017_PPP")
View(fin_IEA_IRENA_2017_PPP)
library(readxl)
fin_IEA_IRENA_2017_Market <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "IEA_IRENA_2017_Market")
View(fin_IEA_IRENA_2017_Market)
library(readxl)
fin_SGLP_PPP <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "SGLP_PPP")
View(fin_SGLP_PPP)
library(readxl)
fin_SGLP_GDPdef <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "SGLP_Market")
View(fin_SGLP_GDPdef)
library(readxl)
fin_SGLP_CPI <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "SGLP_CPI")
View(fin_SGLP_CPI)
rm(fin_SGLP_PPP)
library(readxl)
fin_LPF_CPI <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "LPF_CPI")
View(fin_LPF_CPI)
library(readxl)
fin_LPF_GDPdef <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "LPF_GDPdef")
View(fin_LPF_GDPdef)
library(readxl)
fin_DEBIS_2017_PPP <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "DEBIS_2017_PPP")
View(fin_DEBIS_2017_PPP)
library(readxl)
fin_DEBIS_2017_Market <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "DEBIS_2017_Market")
View(fin_DEBIS_2017_Market)
library(readxl)
fin_US_EPA_PPP <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "US_EPA_PPP")
View(fin_US_EPA_PPP)
library(readxl)
fin_US_EPA_Market <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "US_EPA_Market")
View(fin_US_EPA_Market)
library(readxl)
DELWP_Carbon_Pricing_Data <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "fin_AR5_subset_ppp")
View(DELWP_Carbon_Pricing_Data)
library(readxl)
fin_AR5_subset_market <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "fin_AR5_subset_market")
View(fin_AR5_subset_market)
fin_AR5_subset_ppp <- DELWP_Carbon_Pricing_Data
rm(DELWP_Carbon_Pricing_Data)
rm(fin_AR5_subset)
View(fin_AR5_subset_market)
View(fin_AR5_subset_ppp)
View(fin_AR5_subset_market)
fin_AR5_subset_market[2:6]<-NULL
View(fin_AR5_subset_market)
View(fin_AR5_subset_ppp)
fin_AR5_subset_market <- as.tibble(fin_AR5_subset_market)
fin_AR5_subset_market <- fin_AR5_subset_market %>% gather(`2020`,`2030`,`2040`, `2050`, key = "year", value ="price")
library(tidyverse)
fin_AR5_subset_market <- as.tibble(fin_AR5_subset_market)
fin_AR5_subset_market <- fin_AR5_subset_market %>% gather(`2020`,`2030`,`2040`, `2050`, key = "year", value ="price")
View(fin_AR5_subset_market)
fin_AR5_subset_ppp <- as.tibble(fin_AR5_subset_ppp)
fin_AR5_subset_ppp <- fin_AR5_subset_ppp %>% gather(`2020`,`2030`,`2040`, `2050`, key = "year", value ="price")
View(fin_AR5_subset_ppp)
View(fin_corridors_market)
fin_corridors_market <- as.tibble(fin_corridors_market)
fin_corridors_market <- fin_corridors_market %>% gather(`Full sample`,`Majority`,`Full sample_1`, `Majority_1`, key = "year", value ="price")
fin_corridors_market <- as.tibble(fin_corridors_market)
fin_corridors_market <- fin_corridors_market %>% gather("Full sample","Majority", "Full sample_1", "Majority_1", key = "year", value ="price")
fin_corridors_market <- fin_corridors_market %>% gather("Full sample","Majority", "Full sample__1", "Majority__1", key = "year", value ="price")
View(fin_corridors_market)
View(fin_corridors_market)
View(fin_AR5_subset_market)
View(fin_AR5_subset_market)
fin_corridors_market <- fin_corridors_market %>% gather("Full sample","Majority", "Full sample__1", "Majority__1", key = "scenario", value ="price")
View(fin_corridors_market)
View(fin_corridors_market)
fin_corridors_ppp <- as.tibble(fin_corridors_ppp)
fin_corridors_ppp <- fin_corridors_ppp %>% gather("Full sample","Majority", "Full sample__1", "Majority__1", key = "scenario", value ="price")
AR5$year <- as.numeric(AR5$year)
View(fin_AR5_subset_market)
qplot(year, price, data=fin_AR5_subset_market, geom = "line", color = ModelScenario) +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'-e')) +
scale_x_continuous(breaks = seq(2020, 2050, by = 5)) +
scale_y_continuous(breaks = seq(0,1600, by = 100)) +
theme(legend.title=element_blank()) +
theme(legend.position="bottom") +
theme(legend.text = element_text(size=7)) +
theme(axis.text = element_text(size=7))
qplot(year, price, data=fin_AR5_subset_market, geom = "line", color = model_scenario) +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'-e')) +
scale_x_continuous(breaks = seq(2020, 2050, by = 5)) +
scale_y_continuous(breaks = seq(0,1600, by = 100)) +
theme(legend.title=element_blank()) +
theme(legend.position="bottom") +
theme(legend.text = element_text(size=7)) +
theme(axis.text = element_text(size=7))
fin_AR5_subset_market$year <- as.numeric(fin_AR5_subset_market$year)
qplot(year, price, data=fin_AR5_subset_market, geom = "line", color = model_scenario) +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'-e')) +
scale_x_continuous(breaks = seq(2020, 2050, by = 5)) +
scale_y_continuous(breaks = seq(0,1600, by = 100)) +
theme(legend.title=element_blank()) +
theme(legend.position="bottom") +
theme(legend.text = element_text(size=7)) +
theme(axis.text = element_text(size=7))
ggplot(fin_AR5_subset_market, aes(year, price)) +
stat_summary(fun.data = "iqr", geom = "ribbon", fill = alpha("blue", 1/5)) +
stat_summary(aes(year), fun.y = IQmean, geom = "line", color = "black") +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'-e')) +
scale_x_continuous(breaks = seq(2020, 2050, by = 5)) +
scale_y_continuous(breaks = seq(0,1200, by = 50)) +
theme(axis.text = element_text(size=7))
qplot(year, price, data = fin_AR5_subset_market, geom = "line", group = model_scenario) + facet_wrap(~model_scenario) +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'-e')) +
scale_x_continuous(breaks = pretty(cpricefin$year, n=5)) +
theme(axis.text.x = element_text(angle=45, vjust=0.8, hjust=0.8)) +
theme(axis.text = element_text(size=7))
ggplot(auspriceall, aes(year, priceAUD2016)) +
stat_summary(fun.data = "median_hilow", geom = "ribbon", fill = alpha("green", 1/5)) +
stat_summary(fun.data = "iqr", geom = "ribbon", fill = alpha("blue", 1/5)) +
stat_summary(aes(year), fun.y = IQmean, geom = "line", color = "black") +
stat_summary(aes(year), fun.y = median, geom = "line", color = "red") +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'e or t'~CO[2])) +
scale_x_continuous(breaks = seq(2010, 2050, by = 5)) +
scale_y_continuous(breaks = seq(0,800, by = 25)) +
theme(axis.text = element_text(size=7))
ggplot(intprice, aes(year, priceAUD2016)) +
stat_summary(fun.data = "median_hilow", geom = "ribbon", fill = alpha("green", 1/5)) +
stat_summary(fun.data = "iqr", geom = "ribbon", fill = alpha("blue", 1/5)) +
stat_summary(aes(year), fun.y = IQmean, geom = "line", color = "black") +
stat_summary(aes(year), fun.y = median, geom = "line", color = "red") +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'e or t'~CO[2])) +
scale_x_continuous(breaks = seq(2020, 2050, by = 5)) +
scale_y_continuous(breaks = seq(0,800, by = 25)) +
theme(axis.text = element_text(size=7)) +
theme_bw()
qplot(year, price, data=AR5, geom = "line", color = ModelScenario) +
labs(x = "Year", y = bquote('2016 AUD/t'~CO[2]~'-e')) +
scale_x_continuous(breaks = seq(2020, 2050, by = 5)) +
scale_y_continuous(breaks = seq(0,1600, by = 100)) +
theme(legend.title=element_blank()) +
theme_bw () +
theme(legend.title=element_blank()) +
theme(legend.position="bottom") +
theme(legend.text = element_text(size=7)) +
theme(axis.text = element_text(size=7)) +
theme(panel.grid.major.x = element_blank(), panel.grid.major.y =  element_blank()) +
theme(panel.grid.minor.x = element_blank(), panel.grid.minor.y =  element_blank()) +
theme(legend.title=element_blank())
View(fin_CPLF_market)
fin_CPLF_market <- as.tibble(fin_CPLF_market)
fin_CPLF_market <- fin_CPLF_market %>% gather("lower","upper", key = "scenario", value ="price")
View(fin_CPLF_market)
fin_CPLF_ppp <- as.tibble(fin_CPLF_ppp)
fin_CPLF_ppp <- fin_CPLF_ppp %>% gather("lower","upper", key = "scenario", value ="price")
View(fin_CPLF_ppp)
View(fin_CPLF_market)
View(fin_CPLF_market)
View(fin_AR5_subset_ppp)
View(cpricefin)
fin_AR5_sum_tab <- fin_AR5_subset_ppp %>%
group_by(year) %>%
summarise(
count = n(),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE)
)
View(fin_AR5_sum_tab)
fin_AR5_sum_tab <- fin_AR5_subset_ppp %>%
group_by(year) %>%
summarise(
count = n(),
min = min(price, na.rm = TRUE),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
median = median(price, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE)
max = max(price, na.rm = TRUE)
)
fin_AR5_sum_tab <- fin_AR5_subset_ppp %>%
group_by(year) %>%
summarise(
count = n(),
min = min(price, na.rm = TRUE),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
median = median(price, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE),
max = max(price, na.rm = TRUE)
)
View(fin_AR5_sum_tab)
View(fin_AR5_subset_ppp)
View(fin_AR5_sum_tab)
fin_AR5_sum_tab <- fin_AR5_subset_ppp %>%
group_by(year) %>%
summarise(
count = n(),
min = min(price, na.rm = TRUE),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
median = median(price, na.rm = TRUE),
mean = mean(price, na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE),
max = max(price, na.rm = TRUE)
)
View(fin_AR5_sum_tab)
View(fin_AR5_subset_market)
View(cpricehlow)
View(fin_AR5_subset_market)
View(fin_AR5_subset_ppp)
bind_rows(fin_AR5_subset_ppp, fin_corridors_ppp, fin_CPLF_ppp, fin_DEBIS_2017_PPP, fin_IEA_2016_ppp, fin_IEA_IRENA_2017_PPP, fin_LPF_CPI, fin_quinet_PPP, fin_SGLP_CPI, fin_US_EPA_PPP)
as.numeric(fin_AR5_subset_ppp$year)
fin_AR5_subset_ppp$year<-as.numeric(fin_AR5_subset_ppp$year)
View(fin_AR5_subset_ppp)
fin_AR5_subset_ppp
fin_corridors_ppp
fin_CPLF_ppp
fin_DEBIS_2017_PPP
fin_IEA_2016_ppp
fin_IEA_IRENA_2017_PPP
fin_LPF_CPI
fin_DEBIS_2017_PPP <- fin_DEBIS_2017_PPP %>% gather("low","central", "high", key = "scenario", value ="price")
bind_rows(fin_AR5_subset_ppp, fin_corridors_ppp, fin_CPLF_ppp, fin_DEBIS_2017_PPP)
fin_IEA_2016_ppp
fin_LPF_CPI <- fin_LPF_CPI %>% gather("CPRS-5","CPRS-15", "Garuanut-10", "Garnaut-25", key = "scenario", value ="price")
fin_LPF_CPI <- fin_LPF_CPI %>% gather("CPRS-5","CPRS-15", "Garnaut-10", "Garnaut-25", key = "scenario", value ="price")
fin_LPF_CPI
fin_quinet_PPP
fin_quinet_PPP <- fin_quinet_PPP %>% gather("recommended","alternative", key = "scenario", value ="price")
fin_SGLP_CPI
fin_SGLP_CPI <- fin_SGLP_CPI %>% gather("SGLP_core","Clean_Energy_Future", "Government-policy", "High_price_scenario", key = "scenario", value ="price")
fin_SGLP_CPI <- fin_SGLP_CPI %>% gather("SGLP_core","Clean_Energy_Future", "Government_policy", "High_price_scenario", key = "scenario", value ="price")
fin_US_EPA_PPP
fin_US_EPA_PPP <- fin_US_EPA_PPP %>% gather("five_avg","three_avg", "two_avg", "high_impact", key = "scenario", value ="price")
bind_rows(fin_AR5_subset_ppp, fin_corridors_ppp, fin_CPLF_ppp, fin_DEBIS_2017_PPP, fin_IEA_2016_ppp, fin_IEA_IRENA_2017_PPP, fin_LPF_CPI, fin_quinet_PPP, fin_SGLP_CPI, fin_US_EPA_PPP)
fin_all_summ <- bind_rows(fin_AR5_subset_ppp, fin_corridors_ppp, fin_CPLF_ppp, fin_DEBIS_2017_PPP, fin_IEA_2016_ppp, fin_IEA_IRENA_2017_PPP, fin_LPF_CPI, fin_quinet_PPP, fin_SGLP_CPI, fin_US_EPA_PPP)
fin_all_sum[4:5]<- NULL
fin_all_summ[4:5]<- NULL
fin_all_summ
fin_all_summ_tab <- fin_all_summ %>%
group_by(year) %>%
summarise(
count = n(),
min = min(price, na.rm = TRUE),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
median = median(price, na.rm = TRUE),
mean = mean(price, na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE),
max = max(price, na.rm = TRUE)
)
View(fin_all_summ_tab)
fin_all_summ <- bind_rows(fin_corridors_ppp, fin_CPLF_ppp, fin_DEBIS_2017_PPP, fin_IEA_2016_ppp, fin_IEA_IRENA_2017_PPP, fin_LPF_CPI, fin_quinet_PPP, fin_SGLP_CPI, fin_US_EPA_PPP)
fin_all_summ[4:5]<- NULL
fin_all_summ_tab <- fin_all_summ %>%
group_by(year) %>%
summarise(
count = n(),
min = min(price, na.rm = TRUE),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
median = median(price, na.rm = TRUE),
mean = mean(price, na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE),
max = max(price, na.rm = TRUE)
)
View(fin_all_summ_tab)
View(fin_all_summ)
View(fin_quinet_PPP)
fin_quinet_PPP[12,3]<-NA
fin_quinet_PPP[11,3]<-NA
fin_all_summ <- bind_rows(fin_corridors_ppp, fin_CPLF_ppp, fin_DEBIS_2017_PPP, fin_IEA_2016_ppp, fin_IEA_IRENA_2017_PPP, fin_LPF_CPI, fin_quinet_PPP, fin_SGLP_CPI, fin_US_EPA_PPP)
fin_all_summ[4:5]<- NULL
fin_all_summ_tab <- fin_all_summ %>%
group_by(year) %>%
summarise(
count = n(),
min = min(price, na.rm = TRUE),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
median = median(price, na.rm = TRUE),
mean = mean(price, na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE),
max = max(price, na.rm = TRUE)
)
View(fin_all_summ_tab)
fin_all_summ_subset <- filter(fin_all_summ, year = c(2010, 2020, 2030, 2040, 2050))
fin_all_summ_subset <- filter(fin_all_summ, year == c(2010, 2020, 2030, 2040, 2050))
fin_all_summ_subset <- filter(fin_all_summ, year %in% c(2010, 2020, 2030, 2040, 2050))
View(fin_all_summ_subset)
fin_all_summ_tab <- fin_all_summ_subset %>%
group_by(year) %>%
summarise(
count = n(),
min = min(price, na.rm = TRUE),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
median = median(price, na.rm = TRUE),
mean = mean(price, na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE),
max = max(price, na.rm = TRUE)
)
View(fin_all_summ_tab)
library(readxl)
fin_AR5_lower_PPP <- read_excel("~/Dropbox/DELWP Carbon Valuation/External Data Sets/DELWP Carbon Pricing Data.xlsx",
sheet = "fin_AR5_lower_PPP")
View(fin_AR5_lower_PPP)
fin_AR5_lower_PPP <- as.tibble(fin_AR5_lower_PPP)
fin_AR5_lower_PPP <- fin_AR5_lower_PPP %>% gather(`2020`,`2030`, `2040`, `2050`, key = "year", value ="price")
fin_AR5_lower_PPP
fin_AR5_lower_PPP$year <- as.numeric(fin_AR5_lower_PPP$year)
fin_all_summ_tab <- fin_AR5_lower_PPP %>%
group_by(year) %>%
summarise(
count = n(),
min = min(price, na.rm = TRUE),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
median = median(price, na.rm = TRUE),
mean = mean(price, na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE),
max = max(price, na.rm = TRUE)
)
fin_all_summ_tab <- fin_all_summ_subset %>%
group_by(year) %>%
summarise(
count = n(),
min = min(price, na.rm = TRUE),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
median = median(price, na.rm = TRUE),
mean = mean(price, na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE),
max = max(price, na.rm = TRUE)
)
fin_AR5_lower_tab <- fin_AR5_lower_PPP %>%
group_by(year) %>%
summarise(
count = n(),
min = min(price, na.rm = TRUE),
Q1 = quantile(price, c(0.25), na.rm = TRUE),
median = median(price, na.rm = TRUE),
mean = mean(price, na.rm = TRUE),
IQmean = mean(price, trim = 0.25, na.rm = TRUE),
Q3 = quantile(price, c(0.75), na.rm = TRUE),
max = max(price, na.rm = TRUE)
)
View(fin_AR5_lower_tab)
View(fin_AR5_lower_PPP)
summary(c(167,111,111,88,69,43,33,30,30,30,28,24,24,20,18,18,18,18,18,16,14,14,10,10,10,9,8,7,7,7,7,7,6,5,4,3,3,3,3,3,1,0,0))
summary(c(507.4654,219.7308,98.8178,63.4456,9.0312,42.6,35.6278,15.9466,34.7616,14.2,35.6278,21.9674,14.555,12.6806,7.9662,213.9372,21.3994,113.6,113.6,8.52,71,16.046,16.046,56.8,5.68,39.8452,16.046,5.3534,21.3,25.56,14.2,59.001,35.6278,34.7616,15.62,173.737,151.0596,119.6208,71,21.3994,51.0632,50.6656,45.44,16.046,35.9828,35.4006,34.293,32.092,59.001,36.7212,35.8266,112.9894,121.6798,47.8256,7.9662,32.66,31.879,12.7516,17.679,12.78,47.8256,34.7616,16.046,11.1612,42.6,34.7616,28.4,133.7072,72.42,69.5232,58.8306,35.0598,32.092,213,85.2,28.4,53.4772,42.7846,118.0162,434.5626,95.637,95.637,95.637,63.758,52.6252,50.978,48.28,32.092,31.879))
IQmean(c(507.4654,219.7308,98.8178,63.4456,9.0312,42.6,35.6278,15.9466,34.7616,14.2,35.6278,21.9674,14.555,12.6806,7.9662,213.9372,21.3994,113.6,113.6,8.52,71,16.046,16.046,56.8,5.68,39.8452,16.046,5.3534,21.3,25.56,14.2,59.001,35.6278,34.7616,15.62,173.737,151.0596,119.6208,71,21.3994,51.0632,50.6656,45.44,16.046,35.9828,35.4006,34.293,32.092,59.001,36.7212,35.8266,112.9894,121.6798,47.8256,7.9662,32.66,31.879,12.7516,17.679,12.78,47.8256,34.7616,16.046,11.1612,42.6,34.7616,28.4,133.7072,72.42,69.5232,58.8306,35.0598,32.092,213,85.2,28.4,53.4772,42.7846,118.0162,434.5626,95.637,95.637,95.637,63.758,52.6252,50.978,48.28,32.092,31.879))
