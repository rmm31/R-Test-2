{
    "collab_server" : "",
    "contents" : "#Reshape AUSPRICER data\n\nAUSPRICER <- as.tibble(AUSPRICER)\n\nAUSPRICE <- AUSPRICER %>% gather(\"CPRS5\", \"CPRS15\", \"Garnaut10\", \"Garnaut25\", key = \"source\", value =\"priceAUD2016\")\n\n#Combine AUSPRICE data with other datasets\n\ncpricefin <- rbind(AUSPRICE, UKDEBIS, WEO2016R, PET2017R)\n\n#  IQR ribbon with median/trimmed mean line (note year must be numeric)\n\niqr <- function(x, ...) {qs <- quantile(as.numeric(x), c(0.25, 0.75), na.rm = T)\nnames(qs) <- c(\"ymin\", \"ymax\")\nqs\n}\n\n#0.25 trim to establish the interquartile mean (used by the London Interbank Offered Rate - see Wikipedia)\n\nIQmean <- function(x, ...) {md1 <- mean(as.numeric(x), trim = 0.25, na.rm = TRUE)\nmd1\n} \n\n#Code for IQR ribbon with IQmean\nallribbon <- ggplot(cpricefin, aes(year, priceAUD2016)) +\n  stat_summary(fun.data = \"median_hilow\", geom = \"ribbon\", fill = alpha(\"green\", 1/5)) +\n  stat_summary(fun.data = \"iqr\", geom = \"ribbon\", fill = alpha(\"blue\", 1/5)) +\n  stat_summary(aes(year), fun.y = IQmean, geom = \"line\", color = \"black\") +\n  stat_summary(aes(year), fun.y = median, geom = \"line\", color = \"red\") +\n  labs(x = \"Year\", y = bquote('2016 AUD/t'~CO[2]~'e or t'~CO[2])) +\n  scale_x_continuous(breaks = seq(2020, 2050, by = 5)) +\n  scale_y_continuous(breaks = seq(0,800, by = 25)) +\n  theme(axis.text = element_text(size=7)) #+\n # theme(legend.title=element_blank()) +\n # theme(legend.position=\"bottom\")\n\n#Code for faceted selection of charts one for each price series\nallfacet <- qplot(year, priceAUD2016, data = cpricefin, geom = \"line\", group = source) + facet_wrap(~source, labeller = as_labeller(facet_names)) +\n  labs(x = \"Year\", y = bquote('2016 AUD/t'~CO[2]~'e or t'~CO[2])) +\n  scale_x_continuous(breaks = pretty(cpricefin$year, n=5)) +\n   theme(axis.text.x = element_text(angle=45, vjust=0.8, hjust=0.8)) +\n  theme(axis.text = element_text(size=7)) +\n  theme(strip.text.x = element_text(size = 7))\n#Code to change names for facets\nfacet_names <- c(\n  `CPRS15` = \"CPRS -15 Aust Emissions Price\",\n  `CPRS5` = \"CPRS -5 Aust Emissions Price\",\n  `DEBIStrhigh` = \"DEBIS Traded High\",\n  `DEBIStrtrcent` = \"DEBIS Traded Central\",\n  `DEBIStrlow` = \"DEBIS Traded Low\",\n  `DEBISuntrhigh` = \"DEBIS Untraded High\",\n  `DEBISuntrcent` = \"DEBIS Untraded Central\",\n  `DEBISuntrlow` = \"DEBIS Untraded Low\",\n  `Garnaut25` = \"Garnaut -25 Aust Emissions Price\",\n  `Garnaut10` = \"Garnaut -10 Aust Emissions Price\",\n  `PET2017R` = \"Pathways 2017\",\n  `WEO2016R` = \"WEO 2016\"\n)\n#Code to put faceted charts and ribbon on a single page.\nmultiplot(Govmod, allfacet, allribbon,cols=1)\n\n#Create table of values to parallel chart\n\nsumdatallfin <- cpricefin %>% \n  group_by(year) %>% \n  summarise(\n    count = n(),\n    Quan10 = quantile(priceAUD2016, c(0.1), na.rm = TRUE),\n    Quan15 = quantile(priceAUD2016, c(0.15), na.rm = TRUE),\n    Q1 = quantile(priceAUD2016, c(0.25), na.rm = TRUE),\n    IQmean = mean(priceAUD2016, trim = 0.25, na.rm = TRUE),\n    Q3 = quantile(priceAUD2016, c(0.75), na.rm = TRUE)\n  )\n\n\n# Code for line chart\n\nGovmod <-qplot(year, priceAUD2016, data=cpricefin, geom = \"line\", color = source) + \n  labs(x = \"Year\", y = bquote('2016 AUD/t'~CO[2]~'e or t'~CO[2])) +\n  scale_x_continuous(breaks = seq(2020, 2050, by = 5)) +\n  scale_y_continuous(breaks = seq(0,800, by = 50)) +\n  theme(legend.title=element_blank()) +\n  theme(legend.position=\"bottom\") +\n  theme(legend.text = element_text(size=7)) +\ntheme(axis.text = element_text(size=7)) ",
    "created" : 1503370517719.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "446272345",
    "id" : "D1961765",
    "lastKnownWriteTime" : 1502843058,
    "last_content_update" : 1502843058,
    "path" : "~/Documents/GitHub/R-repository-test/R-test/Final chart code.R",
    "project_path" : "Final chart code.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}